\documentclass{beamer}
% \usetheme{Copenhagen}
% \useoutertheme{miniframes}
% \useoutertheme{tree}

\usepackage{graphicx}
\usepackage{hyperref}
\usepackage{Sweave}
\usepackage{overpic}
\usepackage{longtable}

\hypersetup{
  colorlinks=TURE,
  linkcolor=red,
  citecolor=green,
  urlcolor=red
}
\usepackage{natbib}
\usepackage{verbatim}
% \usepackage[normalem]{ulem}
% \usepackage{Sweave}

\mode<presentation>
{
  % \usetheme{Madrid}
  \usetheme{Warsaw}
  \useinnertheme{circles}
  \useoutertheme{infolines}
  \setbeamercovered{transparent}
}

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}

\newcommand{\software}[1]{\textsf{#1}}
\newcommand{\R}{\software{R}}
\newcommand{\Bioc}{\software{Bioconductor}}
\newcommand{\IRanges}{\Rpackage{IRanges}}
\newcommand{\biovizBase}{\Rpackage{biovizBase}}
\newcommand{\ggbio}{\Rpackage{ggbio}}
\newcommand{\visnab}{\Rpackage{visnab}}
\newcommand{\ggplot}{\Rpackage{ggplot2}}
% \newcommand{\grid}{\Rpackage{grid}}
\newcommand{\gridExtra}{\Rpackage{gridExtra}}
\newcommand{\qplot}{\Rfunction{qplot}}
\newcommand{\autoplot}{\Rfunction{autoplot}}
\newcommand{\gr}{\Rfunction{GRanges}}


\newcommand{\newblock}{}

\AtBeginSubsection[]
{
  \begin{frame}<beamer>{Outline}
    \tableofcontents[currentsection,currentsubsection]
  \end{frame}
}

\AtBeginSection[]
{
  \begin{frame}<beamer>{Outline}
    \tableofcontents[currentsection,currentsubsection]
  \end{frame}
}

\makeatletter
% add a macro that saves its argument
\newcommand{\footlineextra}[1]{\gdef\insertfootlineextra{#1}}
\newbox\footlineextrabox

% add a beamer template that sets the saved argument in a box.
% The * means that the beamer font and color "footline extra" are automatically added. 
\defbeamertemplate*{footline extra}{default}{
    \begin{beamercolorbox}[ht=2.25ex,dp=1ex,leftskip=\Gm@lmargin]{footline extra}
    \insertfootlineextra
    %\par\vspace{2.5pt}
    \end{beamercolorbox}
}

\addtobeamertemplate{footline}{%
    % set the box with the extra footline material but make it add no vertical space
    \setbox\footlineextrabox=\vbox{\usebeamertemplate*{footline extra}}
    \vskip -\ht\footlineextrabox
    \vskip -\dp\footlineextrabox
    \box\footlineextrabox%
}
{}

% patch \begin{frame} to reset the footline extra material
\let\beamer@original@frame=\frame
\def\frame{\gdef\insertfootlineextra{}\beamer@original@frame}
\footlineextra{}
\makeatother


\setbeamercolor{footline extra}{fg=structure.fg}% for instance

\title{ggbio: Extends the grammar of graphics to genomic data and
  object-oriented visualization tool.}
\institute{Iowa State University}
\author{Tengfei Yin}
\date{\today}


\begin{document}
\bibliographystyle{plainnat}

\frame{\titlepage}

\begin{frame}\footnotesize
\frametitle{Outline}
  \tableofcontents
\end{frame}

\section{Introduction}
\subsection{Motivation}
\begin{frame}
  \begin{itemize}
  \item Generalize genomic visualization frame work and approach.
  \item Shed light on  development of genomic visualization on any platform.
  \item Make graphics flexible, extensible and elegant.
  \item Multivariate exploration.
  \item Allow user to plug-in their own graphics as tracks.
  \end{itemize}
\end{frame}

% \begin{frame}{What we have?}
%   \begin{block}{}
%   \begin{itemize}
%   \item<2-> A powerful computational platform.    
%     \begin{itemize}
%     \item \software{R}: statistical platform, numerous model.
%     \end{itemize}
%   \item<3-> A general data model.
%     \begin{itemize}
%     \item \software{Bioconductor}: For I/O, data model, and some transformation method.
%     \end{itemize}
%   \item<4-> A general graphic model and grammar.
%     \begin{itemize}
%     \item \Rpackage{ggplot2}: A grammar of graphics in R.
%     \end{itemize}
%   \end{itemize}
%   \end{block}
%   \begin{center}
%     \includegraphics<2>[heights = 0.5\textheight, width = 0.5\textwidth]{Figures/Rlogo.png}
%     \includegraphics<3>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/bioc.png}   
%     \includegraphics<4>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/gog-book.jpg}   
%     \includegraphics<4>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/ggplot2-book.jpg}
%   \end{center}
% \end{frame}

\begin{frame}
\frametitle{What can ggbio does?}  
% a graphic goes here
\begin{center}
  \includegraphics[height = 0.8\textheight]{Figures/all.pdf}
\end{center}
\end{frame}

% \section{Help}
\begin{frame}{Package release/development}
  \begin{itemize}
  \item Bioconductor is the *ONLY* way to get packages for ggbio.
  \item Github development is \alert{stopped} for developing ggbio.    
  \item Package attached vignettes are recommended.
  \item On-line documentation will be changed soon to document examples.
  \end{itemize}
\end{frame}

\section{Tutorial}
\begin{frame}[fragile]{Version}
  \begin{itemize}
  \item R: >=2.15.0
  \item ggbio: >=1.5.10
  \item biovizBase: >=1.5.4
  \end{itemize}
  Use following code to update if you are no using AMI.
  \begin{block}{}
@ 
<<up, eval = FALSE>>=
library(BiocInstaller)
useDevel(TRUE)
biocLite("ggbio")
@ %def 
  \end{block}
\end{frame}

\begin{frame}[fragile]{Rstudio(AMI) problem}
  If you can not load packages in AMI, please try
  \begin{block}{workaround}
@ 
<<rs, eval = FALSE>>=
source("~/.Rprofile")
@ %def 
  \end{block}
\end{frame}

\subsection{Case study I: chip-seq tracks.}
\begin{frame}
  \begin{itemize}
  \item Demo basically from tutorial for chip-seq data.    
  \item Goal:
    \begin{itemize}
    \item Overview of top 50 different binding peaks cross two samples.
    \item Tracks for a particular region
      \begin{itemize}
      \item One genomic features track.      
      \item One coverage track faceted by samples.
      \item One single chromosome ideogram track.        
      \end{itemize}
    \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{Getting the ChIP-seq sample data}
  \begin{block}{}
@ 
<<chip-sample>>=
library(chipseq)
data(cstest)
## estimate fragment length
fraglen <- estimate.mean.fraglen(cstest$ctcf)
fraglen[!is.na(fraglen)]
ctcf.ext <- resize(cstest$ctcf, width = 200)
cov.ctcf <- coverage(ctcf.ext)
gfp.ext <- resize(cstest$gfp, width = 200)
cov.gfp <- coverage(gfp.ext)
@ %def 
  \end{block}
\end{frame}

\begin{frame}[fragile]{Finding different binding peaks}
  \begin{block}{}
@ 
<<peak-diff>>=
peakCutoff(cov.ctcf, fdr = 0.0001)
peaks.ctcf <- slice(cov.ctcf, lower = 8)
peaks.gfp <- slice(cov.gfp, lower = 8)
peakSummary <- diffPeakSummary(peaks.gfp, peaks.ctcf)
peakSummary <-within(peakSummary,
    {
      diffs <- asinh(sums2) - asinh(sums1)
      resids <- (diffs - median(diffs)) / mad(diffs)
      up <- resids > 2
      down <- resids < -2
      change <- ifelse(up, "up", 
                       ifelse(down, "down", "flat"))
    })
pks <- as(peakSummary, 'GRanges')
@ %def 
  \end{block}
\end{frame}

\begin{frame}[fragile]{GRanges object}
  \begin{itemize}
  \item Container to store genomic interval and meta data.
  \item Serve as a foundamental and critical unit in \ggbio{}
  \end{itemize}
\tiny{
  \begin{block}{}
@ 
<<gr>>=
head(pks)
@ %def 
  \end{block}
  }
\end{frame}

\begin{frame}[fragile]{Remove redundant seqnames and add seqlengths}
\tiny{  
  \begin{block}{}
@ 
<<chip-seqnames>>=
chrs <- unique(as.character(seqnames(pks)))
library(GenomicRanges)
pks <- keepSeqlevels(pks, chrs)
seqlengths(pks) <- seqlengths(cstest)[chrs]
head(pks)
@ %def 
  \end{block}
}
\end{frame}

\begin{frame}[fragile]{Overview of the top 50 different binding peaks}
  \begin{block}{}
@ 
<<overview, fig = TRUE, include = FALSE>>=
pks <- pks[order(values(pks)$diffs, 
                 decreasing = TRUE)][1:50]
autoplot(pks, layout = "karyogram", 
         aes(color = diffs, fill = diffs))
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.7\textwidth]{main-overview}
  \end{center}
\end{frame}

\begin{frame}[fragile]{Define a region to dig down}
  \begin{itemize}
  \item Pick up a region of interests.
  \item That's a region which contains differencial peaks.
  \end{itemize}
  \begin{block}{}
@ 
<<chip-gr>>=
wh <- GRanges("chr11", IRanges(3062594, 3092593))
@ %def 
  \end{block}
\end{frame}

\begin{frame}{Genomic features track.}
Coverage for particular region is ready, let's create a genomic feature track.
  \begin{itemize}
  \item Object: \Rclass{TranscriptDb}.
  \item Function: \Rfunction{autoplot, stat\_gene}.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{Genomic features track(cont).}
  \begin{block}{}
@ 
<<gf-default, fig = TRUE, include = FALSE>>=
library(TxDb.Mmusculus.UCSC.mm9.knownGene)
txdb <- TxDb.Mmusculus.UCSC.mm9.knownGene
library(ggbio)
p.gene <- autoplot(txdb, which = wh)    
p.gene
@ %def 
  \end{block}
\begin{center}
\includegraphics[height = 0.5\textheight, width = 0.6\textwidth]{main-gf-default}    
\end{center}
\end{frame}

% change gap geom
\begin{frame}[fragile]{Genomic features track(cont).}
  \begin{block}{}
@ 
<<gf-chevron, fig = TRUE, include = FALSE>>=
p.gene.c <- autoplot(txdb, which = wh, 
                     gap.geom = "chevron")        
p.gene.c
@ %def 
  \end{block}
\begin{center}
\includegraphics[height = 0.5\textheight, width = 0.6\textwidth]{main-gf-chevron}    
\end{center}
\end{frame}


% change stat:reduce
\begin{frame}{Your turn}
  Task
  \begin{itemize}
  \item Try to use stat = 'reduce' to see what happened.
  \end{itemize}
\end{frame}


\begin{frame}[fragile]{Genomic features track(cont).}
  \begin{block}{}
@ 
<<gf-reduce, fig = TRUE, include = FALSE>>=
p.gene.r <- autoplot(txdb, which = wh, 
                     stat = "reduce")        
library(grid)
print(p.gene.r, vp = viewport(height = 0.15, width = 1))
@ %def 
  \end{block}
\begin{center}
\includegraphics[height = 0.75\textheight]{main-gf-reduce}    
\end{center}
\end{frame}

% \begin{frame}[fragile]{Zoom}
%   \begin{block}{}
% @ 
% <<zoom-tx, fig = TRUE, include = FALSE>>=
% p.zoom <- p.gene + coord_cartesian(xlim = c(3075000, 3095000))
% p.zoom
% @ %def 
%   \end{block}
%   \begin{center}
% \inludegraphics[height = 0.5\textheight]{main-zoom-tx}    
%   \end{center}
% \end{frame}       



% % autoplot,GRanges as a star to learn how to use grammar
\begin{frame}[fragile]{\Rclass{GRanges} object}
  \scriptsize{
    \begin{block}{}
@ 
<<gr-instance>>=
## shorter name
cstest.s <- stack(cstest)
cstest.s <- resize(cstest.s, width = 200)
chipseq <- subsetByOverlaps(cstest.s, wh)
head(chipseq)
@ %def 
\end{block}
  }      
\end{frame}

\begin{frame}[fragile]{default}  
  \begin{block}{}
@ 
<<default-chipseq, fig = TRUE, include = FALSE>>=
autoplot(chipseq)
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.8\textheight, width = 0.9\textwidth]{main-default-chipseq}    
  \end{center}
\end{frame}

\begin{frame}[fragile]{Understand GoG - Facets}  
  \begin{itemize}
  \item Default is always faceted by chromosome names by column. \Rcode{.~seqnames}
  \item You can facet the plots by other factors such as samples. \Rcode{sample
      ~ seqnames}
  \end{itemize}
  \begin{block}{}
@ 
<<chipseq-facets, fig = TRUE, include = FALSE>>=
autoplot(chipseq, facets = strand ~ .)
## equivalent to 
## autoplot(gr, geom = "chevron") +  
##              facet_grid(strand ~ seqnames)
@ %def 
  \end{block}
\end{frame}

\begin{frame}[fragile]{Facets by strand}
  \begin{center}
\includegraphics[height = 0.8\textheight, width = 0.7\textwidth]{main-chipseq-facets}        
  \end{center}
\end{frame}

\begin{frame}{Your turn}
Task
\begin{itemize}
\item Faceted by samples and indicated as the row.
\end{itemize}
\end{frame}

\begin{frame}[fragile]{Solution}
  \begin{block}{}
@ 
<<prac-facets, fig = TRUE, include = FALSE>>=
autoplot(chipseq, facets = sample ~ .)
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.8\textheight, width = 0.9\textwidth]{main-prac-facets}    
  \end{center}
\end{frame}

\begin{frame}[fragile]{Understand GoG - Statistical transformation(stat)}  
\scriptsize{  
  \begin{itemize}
  \item Statistical transformation on the object to make new data model.
  \item key argument \Rfunarg{stat}. Every object/class has different set of stats.
  \item Usually every stat has a default geom, for example, coverage's default
    geom is 'line'
  \end{itemize}
  }
  \begin{block}{}
@ 
<<chipseq-cov, fig = TRUE, include = FALSE>>=
autoplot(chipseq, stat = "coverage", 
         facets = sample ~ .)
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.55\textheight, width = 0.7\textwidth]{main-chipseq-cov}    
  \end{center}
\end{frame}

\begin{frame}[fragile]{Understand GoG - Geometric object(geom)}  
\scriptsize{  
  \begin{itemize}
  \item Geometric object to represent the element(interval).
  \item key argument \Rfunarg{geom}.
  \item Every geom has a default statistical transformation(stat).
  \end{itemize}
  }
  \begin{block}{}
@ 
<<chipseq-cov-area, fig = TRUE, include = FALSE>>=
autoplot(chipseq, stat = "coverage", 
         geom = "area", facets = sample ~ .)
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.55\textheight, width = 0.7\textwidth]{main-chipseq-cov-area}    
  \end{center}
\end{frame}

\begin{frame}[fragile]{How to check the geom/stat for GRanges.}
  \begin{itemize}
  \item Usually can check help manuals for particular object.
  \item For \gr{}, following code can show you something defined within \ggbio{}.
  \item When geom is other than those defined in \ggbio{}, it is treated as a data.frame.
  \end{itemize}
  \begin{block}{}
@ 
<<geom-stat-gr>>=
ggbio:::.ggbio.geom
ggbio:::.ggbio.stat
@ %def 
  \end{block}
\end{frame}

\begin{frame}{Your turn}
  Task
  \begin{itemize}
  \item Try different sets of geom and stats.
  \item Save the faceted coverage plot for future use.
  \end{itemize}
\end{frame}

\begin{frame}[allowframebreaks]{table}
% \begin{table}[h!t!b!p]
\begin{center}
\scriptsize{
\begin{longtable}{|p{1cm}|p{2cm}|p{3.5cm}|p{0.6cm}|}
\hline
Comp & name  & usage & icon\\\hline
\endfirsthead
\endhead
\textbf{geom} &geom\_rect & rectangle& \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/geom_rect.pdf}\\
              &geom\_segment & segment& \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/geom_segment.pdf}\\
              &geom\_chevron & chevron&\includegraphics[height = 0.25cm, width = 0.6cm]{Figures/geom_chevron.pdf}\\
              &geom\_arrow & arrow&\includegraphics[height = 0.25cm, width = 0.6cm]{Figures/geom_arrow.pdf}\\
              &geom\_arch & arches &\includegraphics[height = 0.25cm, width = 0.6cm]{Figures/geom_arch.pdf}\\
              &geom\_bar & bar &\includegraphics[height = 0.25cm, width = 0.6cm]{Figures/geom_bar.pdf}\\
              &geom\_alignment & alignment (gene) & 
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/geom_alignment.pdf}\\\hline
\textbf{stat} 
              &stat\_coverage & coverage (of reads) &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/stat_coverage_icon.pdf}\\
              &stat\_mismatch & mismatch pileup for alignments &
              \includegraphics[height = 0.25cm,width = 0.6cm]{Figures/stat_mismatch.pdf}\\
              &stat\_aggregate & aggregate in sliding window &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/stat_aggregate.pdf}\\
              &stat\_stepping & avoid overplotting &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/stat_stepping.pdf}\\
              &stat\_gene & consider gene structure &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/stat_gene.pdf}\\
              &stat\_table & tabulate ranges &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/stat_table.pdf}\\
              &stat\_identity & no change &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/stat_identity.pdf}\\\hline
\textbf{coord} &linear& ggplot2 linear but facet by chromosome &
               \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/coord_linear.pdf}\\
               &genome& put everything on genomic coordinates&
               \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/coord_genome.pdf}\\
               &truncate gaps & compact view by shrinking gaps&
               \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/coord_truncate_gaps.pdf}\\\hline
\textbf{layout}& track & stacked tracks &\includegraphics[height = 0.25cm, width = 0.6cm]{Figures/coord_linear.pdf}\\
              &karyogram & karyogram display &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/layout_karyogram.pdf}\\
              &circle & circular &
              \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/layout_circle.pdf}\\\hline
\textbf{faceting}&formula & facet by formula &
               \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/facet.pdf}\\
                 &ranges & facet by ranges &
                 \includegraphics[height = 0.25cm, width = 0.6cm]{Figures/facet_gr.pdf}\\\hline
\textbf{scale} &not extended  & \ggplot{}default& \\\hline
\end{longtable}
}
\end{center}
\end{frame}


\begin{frame}[fragile]{Solution}
\begin{block}{}
@ 
<<so-cov, fig = TRUE, include = FALSE>>=
p.cov <- autoplot(chipseq, stat = "coverage", 
                  facets = sample ~ ., geom = "area")
p.cov
@ %def 
\end{block}
  \begin{center}
\includegraphics[height = 0.5\textheight, width = 0.6\textwidth]{main-so-cov}    
  \end{center}
\end{frame}

\begin{frame}[fragile]{Understand GoG - Fixed aesthetics}  
  \begin{itemize}
  \item Fixed color/fill/size.., just passed in \autoplot{}.
  \end{itemize}
  \begin{block}{}
@ 
<<chipseq-arb, fig = TRUE, include = FALSE>>=
autoplot(chipseq, color = "blue", fill = "red")
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.5\textheight, width = 0.6\textwidth]{main-chipseq-arb}    
  \end{center}
\end{frame}

\begin{frame}[fragile]{Understand GoG - Aesthetics mapping}  
  \begin{itemize}
  \item To map variables into aesthetics, use function \Rfunction{aes()}.
  \item Variable inside \Rfunction{aes()}, don't quote.
  \end{itemize}
  \begin{block}{}
@ 
<<chipseq-aes, fig = TRUE, include = FALSE>>=
autoplot(chipseq, aes(fill = strand))
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.5\textheight, width = 0.6\textwidth]{main-chipseq-aes}    
  \end{center}
\end{frame}

\begin{frame}{Your turn}
  Task
  \begin{itemize}
  \item Faceted by samples
  \item Set the border color of the rectangle to be 'black' and filled color
    mapped to this new variable 'strand'.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{Solution}
  \begin{block}{}
@ 
<<prac-aes, fig = TRUE, include = FALSE>>=
autoplot(chipseq, color = "black", aes(fill = strand), 
         facets = sample ~.)
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.6\textheight]{main-prac-aes}    
  \end{center}
\end{frame}

\begin{frame}[fragile]{Additive ability}  
  \begin{itemize}
  \item Use '+'' method to add on more layers or revise an existing graphic.
  \end{itemize}
  \begin{block}{}
@ 
<<gr-scale, fig = TRUE, include = FALSE>>=
p.cov + theme_bw() + 
  geom_hline(yintercept = 8, color = "red")
@ %def 
  \end{block}
  \begin{center}
\includegraphics[height = 0.5\textheight, width = 0.6\textwidth]{main-gr-scale}    
  \end{center}
\end{frame}


\begin{frame}{Tracks}
  \begin{itemize}
  \item Post-graphic arrangement.
  \item Align any \ggplot{} or \ggbio{} plot with numeric x.
  \item So you can construct graphics by \ggplot{} yourself, and \ggbio{} will
    do the alignment for you.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{Building tracks}
  \small{
  \begin{block}{}
@ 
<<chip-tracks, fig = TRUE, include = FALSE>>=
tks <-tracks("coverage" = p.cov, 
             "gene" = p.gene, xlim = wh,
              xlim.change = c(TRUE, TRUE)) 
tks
@ %def 
  \end{block}
}  
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.7\textwidth]{main-chip-tracks}
  \end{center}
\end{frame}

% zoom in
\begin{frame}[fragile]{Zoom to a small region}
  \begin{block}{}
@ 
<<tracks-label, fig = TRUE, include = FALSE>>=
tks <- tks + coord_cartesian(xlim  = c(3.085e6, 3.09e6)) + theme_alignment()
tks
@ %def     
  \end{block}
  \begin{center}
    \includegraphics[height = 0.7\textheight]{main-tracks-label}
  \end{center}
\end{frame}

\begin{frame}[fragile]{Plugin your own graphics}
  \begin{itemize}
  \item If you are a \ggplot{} guru, just create your own graphics.
  \end{itemize}
  \begin{block}{}
@ 
<<own-data, fig = TRUE, include = FALSE>>=
simul <- seq(from = start(wh), to = end(wh), by = 1)
df <- data.frame(x = simul, y = rnorm(length(simul)))
p <- qplot(data = df, x = x, y = y, geom = "line")
tracks("coverage" = p.cov, "gene" = p.gene, 
       "user" = p, xlim = wh)
@ %def 
  \end{block}
\end{frame}

\begin{frame}{plug-in your own data}
  \begin{center}
\includegraphics[height = 0.85\textheight]{main-own-data}    
  \end{center}
\end{frame}

% get ideogram
\begin{frame}[fragile]{Get ideogram}
  \small{
  \begin{block}{}
@ 
<<ideogram>>=
library(rtracklayer)
## require network
head(ucscGenomes())
library(biovizBase)
## getIdeogram()
obj <- getIdeogram("hg19")
obj <- getIdeogram("hg19", cytoband = FALSE)
@ %def 
  \end{block}
  }
\end{frame}

\begin{frame}[fragile]{autoplot for Seqinfo}
  \begin{block}{}
@ 
<<seqinfo, fig = TRUE, include = FALSE>>=
autoplot(seqinfo(obj)[paste0("chr", c(1:22, 'X'))])
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.75\textheight]{main-seqinfo}
  \end{center}
\end{frame}

\begin{frame}{Your turn}
  Task
  \begin{itemize}
  \item Get mouse ideogram. keyword 'mm9'.
  \item Might be a little harder.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{Add the ideogram cytoband.}
\begin{block}{}
@ 
<<ideogram, fig = TRUE, include = FALSE>>=
library(biovizBase)
## mm9 <- getIdeogram("mm9")
cyto.def <- getOption("biovizBase")$cytobandColor
cyto.new <- c(cyto.def, c(gpos33 = "grey80", gpos66 = "grey60"))
p.ideo <- plotIdeogram(mm9, "chr10", zoom = c(start(wh),end(wh)))  + 
  scale_fill_manual(values = cyto.new) 
print(p.ideo)
@ %def 
\end{block}
\begin{center}
\includegraphics[height = 0.1\textheight]{main-ideogram}    
\end{center}
\end{frame}

\begin{frame}[fragile]{Binding an unchanged track.}
  \begin{itemize}
  \item Unchanged track never zoom in/out or synchronize.
  \end{itemize}
  \begin{block}{}
@ 
<<tracks-ideo, fig = TRUE, include = FALSE>>=
tks <- tracks("ideogram" = p.ideo, "coverage" = p.cov, 
              "gene" = p.gene, 
              xlim = wh, 
              xlim.change = c(FALSE, TRUE, TRUE), 
              heights = c(1, 5, 5))
tks
@ %def 
  \end{block}
\end{frame}

\begin{frame}
  \begin{center}
    \includegraphics[height = 0.9\textheight]{main-tracks-ideo}
  \end{center}
\end{frame}



\begin{frame}{Object supported(overview).}
  \begin{block}{}
    \begin{table}
      \centering
\scriptsize{
      \begin{tabular}{|c|c|c|c|c|}
        \hline        
  \only<1->{\Rclass{GRanges}}& \only<2->{\Rclass{IRanges}}& \only<3->{\Rclass{Seqinfo}}& 
            \only<4->{\Rclass{GRangesList} } & \only<5->{\Rclass{BSgenome}}\\\hline
  \only<6->{\Rclass{Rle}}& \only<7->{\Rclass{RleList}}& \only<8->{\Rclass{GappedAlignment}} & 
             \only<9->{\Rclass{BamFile}} & \only<10->{\Rclass{character}}\\\hline            
  \only<11->{\Rclass{matrix}}& \only<12->{\Rclass{ExpressionSet}}& \only<13->{\Rclass{SummarizedExperiment}} & 
             \only<14->{\Rclass{VCF}} &  \only<15>{\Rclass{TranscriptDb}}\\\hline                   
      \end{tabular}
}      
    \end{table}
  \end{block}
  \begin{center}
\includegraphics<2>[height = 0.5\textheight, width = 0.5\textheight]{Figures/autoplot-ir-exp.pdf}    
\includegraphics<3>[height = 0.5\textheight, width = 0.6\textheight]{Figures/autoplot-seqinfo.pdf}    
\includegraphics<4>[height = 0.5\textheight, width = 0.5\textheight]{Figures/autoplot-grl-exp.pdf}    
\includegraphics<5>[height = 0.5\textheight, width = 0.6\textheight]{Figures/autoplot-bs-v.pdf}    
\includegraphics<6>[height = 0.5\textheight, width = 0.6\textheight]{Figures/autoplot-rle-bin.pdf}    
\includegraphics<7>[height = 0.5\textheight, width = 0.6\textheight]{Figures/autoplot-rlel-slice.pdf}    
\includegraphics<8>[height = 0.5\textheight, width = 0.6\textheight]{Figures/autoplot-ga-exp.pdf}    
\includegraphics<9>[height = 0.5\textheight, width = 0.6\textheight]{Figures/bam.pdf}    
\includegraphics<10>[height = 0.5\textheight, width = 0.6\textheight]{Figures/autoplot-bar-default.pdf}    
\includegraphics<11>[height = 0.5\textheight, width = 0.5\textwidth]{Figures/autoplot-matrix-default-scale.pdf}    
\includegraphics<11>[height = 0.5\textheight, width = 0.5\textwidth]{Figures/autoplot-matrix-default-gene.pdf}    

\includegraphics<12>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-eset-default-scale.pdf}    
\includegraphics<12>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-eset-default-pcp.pdf}    
\includegraphics<12>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-eset-default-sm.pdf}    
\includegraphics<12>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-eset-default-volcano.pdf}    

\includegraphics<13>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-sset-heatmap.pdf}    
\includegraphics<13>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-sset-pcp.pdf}    
\includegraphics<13>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-sset-boxplot.pdf}    
\includegraphics<13>[height = 0.5\textheight, width = 0.25\textwidth]{Figures/autoplot-sset-sm.pdf}    

\includegraphics<14>[height = 0.5\textheight, width = 0.6\textheight]{Figures/vcf.pdf}    
\includegraphics<15>[height = 0.5\textheight, width = 0.6\textheight]{Figures/autoplot-txdb-visual.pdf}    
  \end{center}
\end{frame}



% \subsection{Your turn.}
% \begin{frame}{Your turn with RNA-seq data.}
%   Task
%   \begin{itemize}
%   \item Try to plot genomic features for gene.
%   \item Try to bind them by using tracks function.
%   \item Try to get a hg19 ideogram and added an ideogram track yourself.    
%   \item Can you add some arches behind the coverage plot.
%   \end{itemize}
% \end{frame}

% \begin{frame}{Genomic features}
  
% \end{frame}

% \begin{frame}{Mismatch track}
  
% \end{frame}

% \begin{frame}{Ideogram}
  
% \end{frame}
% \subsection{An example - circular view.}
\subsection{Case study II: How to make a circular view.}
\begin{frame}
  Task
  \begin{itemize}
  \item Create point/scale/text/segment track in layout circle.
  \item Show rearrangement as links in the inner circle.
  \end{itemize}
  Rules keep in mind.
  \begin{itemize}
  \item All data must have the same seqlevels and seqlengths definition.
  \item Don't forget to attach data in \Rfunction{layout\_circle}.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{Processing the data}
\tiny{  
  \begin{block}{}
@ 
<<processing>>=
crc1 <- system.file("extdata", "crc1-missense.csv", package = "biovizBase")
crc1 <- read.csv(crc1)
library(GenomicRanges)
mut.gr <- with(crc1,GRanges(Chromosome, IRanges(Start_position, End_position),
                            strand = Strand))
values(mut.gr) <- subset(crc1, select = -c(Start_position, End_position, Chromosome))
data("hg19Ideogram", package = "biovizBase")
seqs <- seqlengths(hg19Ideogram)
## subset_chr
chr.sub <- paste("chr", 1:22, sep = "")
## levels tweak
seqlevels(mut.gr) <- c(chr.sub, "chrX")
mut.gr <- keepSeqlevels(mut.gr, chr.sub)
seqs.sub <- seqs[chr.sub]
## remove wrong position
bidx <- end(mut.gr) <= seqs.sub[match(as.character(seqnames(mut.gr)),
              names(seqs.sub))]
mut.gr <- mut.gr[which(bidx)]
## assign_seqlengths
seqlengths(mut.gr) <- seqs.sub
## reanme to shorter names
new.names <- as.character(1:22)
names(new.names) <- paste("chr", new.names, sep = "")
mut.gr.new <- renameSeqlevels(mut.gr, new.names)
@ %def 
  \end{block}
}
\end{frame}

% \begin{frame}[fragile]{We get a GRanges}
%   \begin{block}
% @ 
% <<cir-gr>>=
% head(mut.gr.new)
% @ %def 
%   \end{block}
% \end{frame}

\begin{frame}[fragile]{Create an ideogram track}
  \begin{block}{}
@ 
<<ideo-track, fig = TRUE, include = FALSE>>=
hg19Ideo <- hg19Ideogram
hg19Ideo <- keepSeqlevels(hg19Ideogram, chr.sub)
hg19Ideo <- renameSeqlevels(hg19Ideo, new.names)
p <- ggplot() + layout_circle(hg19Ideo, geom = "ideo", 
          fill = "gray70", radius = 30, trackWidth = 4)
p
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.6\textheight]{main-ideo-track}
  \end{center}
\end{frame}

\begin{frame}[fragile]{Create an scale track}
  \begin{block}{}
@ 
<<circle-scale, fig = TRUE, include = FALSE>>=
p <- p + layout_circle(hg19Ideo, geom = "scale", 
              size = 2, radius = 35, trackWidth = 2)
p
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.6\textheight]{main-circle-scale}
  \end{center}
\end{frame}

\begin{frame}[fragile]{Create an text track}
  \begin{block}{}
@ 
<<circle-text, fig = TRUE, include = FALSE>>=
p <- p + layout_circle(hg19Ideo, geom = "text", 
                       aes(label = seqnames), vjust = 0,
                       radius = 38, trackWidth = 7)
p
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.6\textheight]{main-circle-text}
  \end{center}
\end{frame}


\begin{frame}[fragile]{Create an mutation track}
  \begin{block}{}
@ 
<<circle-mut, fig = TRUE, include = FALSE>>=
p <- p + layout_circle(mut.gr, geom = "rect", 
                       color = "steelblue",
                       radius = 23 ,trackWidth = 6)
p
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.6\textheight]{main-circle-mut}
  \end{center}
\end{frame}


\begin{frame}[fragile]{Create an mutation track}
\tiny{  
  \begin{block}{}
@ 
<<circle-link-process>>=
rearr  <- read.csv(system.file("extdata", 
                               "crc-rearrangment.csv", package = "biovizBase"))
## start position
gr1 <- with(rearr, GRanges(chr1, IRanges(pos1, width = 1)))
## end position
gr2 <- with(rearr, GRanges(chr2, IRanges(pos2, width = 1)))
## add extra column
nms <- colnames(rearr)
.extra.nms <- setdiff(nms, c("chr1", "chr2", "pos1", "pos2"))
values(gr1) <- rearr[,.extra.nms]
## remove out-of-limits data
seqs <- as.character(seqnames(gr1))
.mx <- seqlengths(hg19Ideo)[seqs]
idx1 <- start(gr1) > .mx
seqs <- as.character(seqnames(gr2))
.mx <- seqlengths(hg19Ideo)[seqs]
idx2 <- start(gr2) > .mx
idx <- !idx1 & !idx2
gr1 <- gr1[idx]
seqlengths(gr1) <- seqlengths(hg19Ideo)
gr2 <- gr2[idx]
seqlengths(gr2) <- seqlengths(hg19Ideo)
values(gr1)$to.gr <- gr2
## rename to gr
gr <- gr1
values(gr)$rearrangements <- ifelse(as.character(seqnames(gr))
              == as.character(seqnames((values(gr)$to.gr))),
             "intrachromosomal", "interchromosomal")
gr.crc1 <- gr[values(gr)$individual == "CRC-1"]
@ %def 
  \end{block}
  }
\end{frame}

\begin{frame}[fragile]{Create an point track}
  \begin{block}{}
@ 
<<circle-point, fig = TRUE, include = FALSE>>=
p <- p + layout_circle(gr.crc1, geom = "point", 
         aes(y = score, size = tumreads), color = "red",
         radius = 12 ,trackWidth = 10, grid = TRUE) +
  scale_size(range = c(1, 2.5))
p
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.6\textheight]{main-circle-point}
  \end{center}
\end{frame}

\begin{frame}[fragile]{Create a link track}
  \begin{block}{}
@ 
<<circle-link, fig = TRUE, include = FALSE>>=
p <- p + layout_circle(gr.crc1, geom = "link", 
                       linked.to = "to.gr", 
                       aes(color = rearrangements),
                       radius = 10 ,trackWidth = 1)
p
@ %def 
  \end{block}
  \begin{center}
    \includegraphics[height = 0.6\textheight, width = 0.6\textheight]{main-circle-link}
  \end{center}
\end{frame}



\section{Conclusion}
\begin{frame}
  \frametitle{Future study}
  \begin{itemize}
  \item Support more core data model in Bioconductor.
  \item More elegant theme for tracks.
  \item Keep improving with new ggplot2 development
  \item More powerful tracks function, may accept lattice graphics.
  \end{itemize}
\end{frame}


\begin{frame}{Issue/bug report}
  \begin{itemize}
  \item File an issue report at github(recommended).
  \item Send me en email.
  \item Send on bioconductor mailing list.
  \end{itemize}
\end{frame}

\begin{frame}
\frametitle{Acknowledgment}  
  \begin{itemize}
  \item Michael Lawrence, Dianne Cook
  \item Genentech
  \end{itemize}
\end{frame}

\begin{frame}
\begin{center}
Thank you !!!
\end{center}
\end{frame}
% \subsection{RNA-seq data visualization}
% \begin{frame}{}
% @ 
% <<bamfile-loading>>=
% bamfile <- "~/Datas/seqs/ENCODE/caltech/single/wgEncodeCaltechRnaSeqGm12878R1x75dAlignsRep1V2.bam"
% ## may use a default instead later
% chrs <- paste0("chr", 1:10)
% autoplot(bamfile, which = "chr1", method = "estimate")
% library(Rsamtools)
% names(scanBamHeader(bamfile)[[1]]$targets)
% autoplot(bamfile)
% p <- autoplot(bamfile, which = chrs, method = "estimate")
% p
% p + facet_grid(seqnames ~ .)
% bamfile <- system.file("extdata", "SRR027894subRBM17.bam", package="biovizBase")
% library(Rsamtools)
% bf <- BamFile(bamfile)
% ## create a human ideogram
% @ %def 
% \end{frame}

% \section{Supporting material}
% \subsection{Background}
% \begin{frame}{Tip of iceberg}
%   \begin{definition}
%     \textbf{big data} is a loosely-defined term used to describe data sets so
%     large and complex that they become awkward to work with using on-hand
%     database management tools. Difficulties include capture, storage,search,
%     sharing, analysis, and \alert{visualization}(\textit{wiki}).
%   \end{definition}
%   \begin{center}
%     \includegraphics[height = 0.4\textwidth]{Figures/Iceberg_Tip.jpg}
%   \end{center}
% \end{frame}


% \begin{frame}{Sequencing data: the iceberg.}
%   \begin{block}{}
%   \begin{itemize}
%   \item Next generation sequencing data is huge, and keep growing.
%   \begin{itemize}
%   \item Raw image over TB.
%   \item Over GB results data per run.
%   \end{itemize}
%   \item Analysis to find \textit{tip} of that ``Ice berg''.
%   \begin{itemize}
%   \item Analytical tool kits.
%   \item Visualization tool kits.
%   \end{itemize}
%   \end{itemize}
%   \end{block}  
%   \begin{center}
%     \includegraphics[height = 0.35\textwidth]{Figures/seq-line.jpg}
%   \end{center}
%   \footlineextra{MR Stratton Nature 485}
% \end{frame}

% \begin{frame}{Visualization. Why and how?}
%   \begin{block}{}
%   \begin{itemize}
%   \item<2-> Diagnostic graphics.
%   \item<3-> Quality control.    
%   \item<4-> Result/finding representations.    
%   \item<5-> Hypothesis form.
%   \end{itemize}
%   \end{block}  
%   \begin{center}
%  \includegraphics<2>[height = 0.5\textheight, width = 0.5\textheight]{Figures/ma-limma.jpg}
%  \includegraphics<3>[height = 0.5\textheight, width = 0.8\textwidth]{Figures/fastqc.png} 
%  \includegraphics<4>[height = 0.5\textheight, width = 0.5\textheight]{Figures/circos.png}
%  \includegraphics<5>[width = 0.35\textwidth]{Figures/H3K4me1_2D.png}
%  \includegraphics<5>[width = 0.35\textwidth]{Figures/H3K4me3_2D.png} 
%   \end{center}
%   \only<2>{\footlineextra{limma package vignette.}} 
%   \only<3>{\footlineextra{FastQC website}}
%   \only<4>{\footlineextra{circos website}} 
%   \only<5>{\footlineextra{HubertVis. Bioinformatics, Vol. 25 (2009) pp. 1231-1235, by S. Anders.} }
% \end{frame}

% \begin{frame}[fragile]
%   \frametitle{Review of current tools}
%   \begin{block}{}
%   \begin{itemize}
%   \item<2-> GenomeGraphs, Gviz(in R).
%   \item<3-> Interactive Desktop-app: IGB/IGV(Java).
%   \item<4-> Web based: UCSC genome browser, DNAnexus.
%   \item<5-> Specialized: Circos.
%   \end{itemize}
%   \end{block}
%   \begin{center}
%  \includegraphics<2>[height = 0.45\textheight]{Figures/gviz.png}
%  \includegraphics<3>[width = 0.5\textwidth, height = 0.45\textheight]{Figures/igb.png} 
%  \includegraphics<3>[width = 0.5\textwidth, height = 0.45\textheight]{Figures/igv.png} 
%  \includegraphics<4>[height = 0.45\textheight]{Figures/ucsc.png}
%  \includegraphics<5>[height = 0.45\textheight, width = 0.5\textheight]{Figures/circos.png}
%   \end{center} 
%   \only<2>{\footlineextra{gviz package vignette.}} 
%   \only<3>{\footlineextra{IGB(Integrated Genome Browser)/IGV(Integrative Genome Viewer) website}}
%   \only<4>{\footlineextra{UCSC genome browser website}} 
%   \only<5>{\footlineextra{circos project.} }
% \end{frame}

% % \subsection{Object-oriented visualization}
% \begin{frame}
%   \frametitle{Motivation}
%   Tired of switching between different tools?
%   \begin{itemize}
%   \item<2-> Can we produce different kinds of graphics in one framework? \\
%   \item<3-> Can they be generalized into one graphic model?\\
%   \item<4-> Can they share the same components and code highly reusable?\\
%   \item<5-> Can they share the same data model?\\
%   \item<6-> Can we provide rich underlying analytical methods?
%   \end{itemize}
% \end{frame}


% \begin{frame}{Generalization possible?}
% \only<1>{Do they really look so different?  }
% \only<2>{Possible to generalize!}
%  \includegraphics[height = 0.5\textheight, width = 0.5\textheight]{Figures/circos.png}
%  \includegraphics[width = 0.65\textwidth, height = 0.5\textheight]{Figures/ucsc.png} 
% \footlineextra{circos project/UCSC Genome browser.}
% \end{frame}


% \begin{frame}{A sucessful OOV tool kit.}
%   \begin{block}{}
%   \begin{itemize}
%   \item<2-> A powerful computational platform.    
%     \begin{itemize}
%     \item \software{R}: statistical platform, numerous model.
%     \end{itemize}
%   \item<3-> A general data model.
%     \begin{itemize}
%     \item \software{Bioconductor}: For I/O, data model, and some transformation method.
%     \end{itemize}
%   \item<4-> A general graphic model and grammar.
%     \begin{itemize}
%     \item \Rpackage{ggplot2}: A grammar of graphics in R.
%     \end{itemize}
%   \end{itemize}
%   \end{block}
%   \begin{center}
%     \includegraphics<2>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/Rlogo.png}
%     \includegraphics<2>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/r_revo.jpg}
%     \includegraphics<2>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/revo_logo.jpg}   
%     \includegraphics<3>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/bioc.png}   
%     \includegraphics<4>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/gog-book.jpg}   
%     \includegraphics<4>[heights = 0.5\textheight, width = 0.3\textwidth]{Figures/ggplot2-book.jpg}
%   \end{center}
% \end{frame}

% \begin{frame}{Why object-oriented visualization matters?}
%   \begin{itemize}
%   \item Extensible method.
%   \item Highly reusable components.    
%   \end{itemize}
% \end{frame}



% % \subsection{tracks}
% \begin{frame}
%   \frametitle{Track based view}
%   \begin{itemize}
%   \item Most commonly used in genome viewer.
%   \item Sitting on genomic coordinate.
%   \item Adjustable heights.
%   \item Flexible labeling.
%   \item 'additive' attribute.
%   \item backup/restore/rescale.
%   \item align almost any plots from \ggplot{} or \ggbio{}.
%   \end{itemize}
% Demo from vignette
% \end{frame}

% % \subsection{Overview}
% \begin{frame}
%   \frametitle{Manhattan plot(Grandlinear)}
%   \begin{block}{}
%   \begin{itemize}
%   \item<2-> Object:\gr{}, 
%   \item<3-> Function \autoplot{}, \Rfunction{plotGrandLinear}.
%   \item<4-> Coordiate used: genome.
%   \item<4-> Tutorial and examples. Please read and try code in vignette
%     \textbf{How to make Manhattan plot with \ggbio{}}
%   \end{itemize}
%   \end{block}  
%   \begin{center}
% \includegraphics<4>[width = 0.6\textwidth, height = 0.5\textheight]{Figures/Manhattan-plotGrandLinear.pdf}    
%   \end{center}
% \end{frame}

% \begin{frame}
%   \frametitle{Karyogram layout}
%   \begin{block}{}
%   \begin{itemize}
%   \item<2-> Object:\gr{}. 
%   \item<3-> Function \autoplot{}, \Rfunction{plotKaryogram}, \Rfunction{layout\_circle}.
%   \item<4-> Layout: karyogram.
%   \item<5-> Tutorial and examples. Please read and try code in vignette
%     \textbf{Karyogram Overview.}
%   \end{itemize}
%   \end{block}
%   \begin{center}
% \includegraphics<5>[width = 0.5\textwidth, height = 0.5\textheight]{Figures/karyogram.pdf}    
%   \end{center}  
% \end{frame}

% \begin{frame}
%   \frametitle{Circular layout}
%   \begin{block}{}  
%   \begin{itemize}
%   \item<2-> Object:\gr{}. 
%   \item<3-> Function \autoplot{}, \Rfunction{layout\_circle}.
%   \item<4-> Layout: circle.
%   \item<5-> Tutorial and examples. Please read and try code in vignette
%     \textbf{How to make circular view with \ggbio{}.}
%   \end{itemize}
%   \end{block}
%   \begin{center}
% \includegraphics<5>[width = 0.49\textheight, height = 0.49\textheight]{Figures/cir-single.pdf}    
% \includegraphics<5>[width = 0.49\textheight, height = 0.49\textheight]{Figures/circular-9-circle.pdf}    
%   \end{center}
% \end{frame}


% % \subsection{Specialized plots}
% \begin{frame}{Specialized plots.}
%   \begin{block}{}
%   \begin{itemize}
%   \item Higher level: for convenience usage. 
%   \item Complex than prototypes, usually integrated with tracks.
%   \end{itemize}
%   \end{block}  
% \end{frame}

% \begin{frame}
%   \frametitle{'ranges-linked-to-data' plot.}
%   \begin{block}{}
%   \begin{itemize}
%   \item<2-> Object:\gr{}. 
%   \item<3-> Function \Rfunction{plotRangesLinkedToData}.
%   \item<4-> Tutorial and examples. Please read and try code in vignette
%     \textbf{How to make a 'ranges-linked-to-data' plot.}
%   \end{itemize}
%   \end{block}  
%   \begin{center}
% \includegraphics<4>[width = 0.49\textwidth, height = 0.49\textheight]{Figures/rangeslinkedtodata-link4.pdf}    
%   \end{center}
% \end{frame}

% \begin{frame}
%   \frametitle{Mismatch summary plot}
%   \begin{itemize}
%   \item<2-> Object:\gr{} or \Rclass{BamFile} or \Rclass{character}. 
%     \item<3-> Function \Rfunction{autoplot}, \Rfunction{stat\_mismatch}, in
%       Package \Rpackage{biovizBase}, function \Rfunction{pileupAsGRanges},
%       \Rfunction{pileupGRangesAsVariantTable}.
%   \item<4-> Tutorial and examples. Please read and try code in vignette
%     \textbf{How to make a mismatch summary plot.}
%   \end{itemize}
%   \begin{center}
% \includegraphics<4>[width = 0.49\textwidth, height = 0.49\textheight]{Figures/mismatch.pdf}    
%   \end{center}  
% \end{frame}



% \begin{frame}{Tip of iceberg}
%   \begin{definition}
%     \textbf{big data} is a loosely-defined term used to describe data sets so
%     large and complex that they become awkward to work with using on-hand
%     database management tools. Difficulties include capture, storage,search,
%     sharing, analysis, and \alert{visualization}(\textit{wiki}).
%   \end{definition}
%   \begin{center}
%     \includegraphics[height = 0.4\textwidth]{Figures/Iceberg_Tip.jpg}
%   \end{center}
% \end{frame}


% \begin{frame}{Sequencing data: the iceberg.}
%   \begin{block}{}
%   \begin{itemize}
%   \item Next generation sequencing data is huge, and keep growing.
%   \begin{itemize}
%   \item Raw image over TB.
%   \item Over GB results data per run.
%   \end{itemize}
%   \item Analysis to find \textit{tip} of that ``Ice berg''.
%   \begin{itemize}
%   \item Analytical tool kits.
%   \item Visualization tool kits.
%   \end{itemize}
%   \end{itemize}
%   \end{block}  
%   \begin{center}
%     \includegraphics[height = 0.35\textwidth]{Figures/seq-line.jpg}
%   \end{center}
%   \footlineextra{MR Stratton Nature 485}
% \end{frame}

\begin{frame}
  \frametitle{What is grammar of graphics(GoG)}
  \begin{center}
    \includegraphics[height = 0.8\textheight]{Figures/ma_copy3.png}
  \end{center}
\end{frame}

\begin{frame}
  \frametitle{GoG in Genomic World.}
  \begin{center}
    \includegraphics[height = 0.5\textheight, width = \textheight]{Figures/ssx3.pdf}
  \end{center}
\end{frame}

\begin{frame}
  \frametitle{Pipeline in ggbio}
  \begin{center}
\includegraphics[height = 0.8\textheight]{Figures/drawing.pdf}  
  \end{center}
\end{frame}

\end{document}
